# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Prod workflow

on:
  push:
    branches:
      - master

env:
  DOCKER_USERNAME: thedoorknobster
  REPO: capeb2/riskevaluator-backend
  VERSION : "v1.0.0-prerelease0"
jobs:
  release:
    environment: PROD
    runs-on: ubuntu-latest
    timeout-minutes: 15
    outputs:
      version_tag: ${{steps.versioning.outputs.version}}
      artifact_name: riskevaluator-backend-${{steps.versioning.outputs.version}}
      upload_url: ${{ steps.create_release.outputs.upload_url }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          # Fetch all commits
          fetch-depth: 0

      - name: Semantic versioning
        id: versioning
        uses: PaulHatch/semantic-version@v4.0.2
        with:
          branch: master
          tag_prefix: "v"
          major_pattern: "BREAKING CHANGE:"
          minor_pattern: "feat:"
          format: "v${major}.${minor}.${patch}-prerelease${increment}"

      - name: Set up JDK 13
        uses: actions/setup-java@v1
        with:
          java-version: '13'

      - name: Build package
        id : build_id
        run: mvn -Drevision=${{steps.versioning.outputs.version}} clean package --batch-mode package --file pom.xml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


      - name: Save Release Jar File for publish
        uses: actions/upload-artifact@v2
        with:
          name: artifact
          path: target/riskevaluator-backend-${{steps.versioning.outputs.version}}.jar


      - name: Create Release
        id : create-release
        if: ${{ !startsWith(github.ref, 'refs/tags/') }}
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }}
        with:
          tag_name: ${{ steps.versioning.outputs.version }}
          release_name: ${{ steps.versioning.outputs.version }}
          prerelease: true

  publish:
    needs: release
    environment: PROD
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Download a single artifact
        uses: actions/download-artifact@v2
        with:
          name: artifact
          path : target
      - name: show me version
        run: echo "I'm running on ${{ needs.release.outputs.upload_url }}"


      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: ./target/${{ needs.release.outputs.artifact_name }}.jar
          asset_name: ${{ needs.release.outputs.artifact_name }}.jar
          asset_content_type: application/java-archive