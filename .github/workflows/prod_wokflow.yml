# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Prod workflow

on:
  push:
    branches:
      - master

env:
  DOCKER_USERNAME: thedoorknobster
  REPO: capeb2/riskevaluator-backend

jobs:
  release:
    environment: PROD
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          # Fetch all commits
          fetch-depth: 0

      - name: Semantic versioning
        id: versioning
        uses: PaulHatch/semantic-version@v4.0.2
        with:
          branch: master
          tag_prefix: "v"
          major_pattern: "BREAKING CHANGE:"
          minor_pattern: "feat:"
          format: "v${major}.${minor}.${patch}-prerelease${increment}"


      - name: Set up JDK 13
        uses: actions/setup-java@v1
        with:
          java-version: '13'

      - name: Build package
        run: mvn -Drevision=${{steps.versioning.outputs.version}} clean package --batch-mode package --file pom.xml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Save Release Jar File for publish
        uses: actions/upload-artifact@v1
        with:
          name: riskevaluator-backend-${{steps.versioning.outputs.version}}
          path: ./target/riskevaluator-backend-${{steps.versioning.outputs.version}}.jar

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./target/riskevaluator-backend-${{steps.versioning.outputs.version}}.jar
          asset_name: riskevaluator-backend-${{steps.versioning.outputs.version}}.jar
          asset_content_type: application/java-archive


